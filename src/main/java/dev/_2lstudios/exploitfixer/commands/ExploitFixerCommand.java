package dev._2lstudios.exploitfixer.commands;

import org.bukkit.command.Command;
import org.bukkit.command.CommandExecutor;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;

import dev._2lstudios.exploitfixer.ExploitFixer;
import dev._2lstudios.exploitfixer.managers.ExploitPlayerManager;
import dev._2lstudios.exploitfixer.managers.ModuleManager;
import dev._2lstudios.exploitfixer.modules.NotificationsModule;
import dev._2lstudios.exploitfixer.utils.VersionUtil;
import dev._2lstudios.exploitfixer.modules.MessagesModule;

public class ExploitFixerCommand implements CommandExecutor {
	private final ExploitFixer exploitFixer;
	private final MessagesModule messagesModule;
	private final NotificationsModule notificationsModule;
	private final ExploitPlayerManager exploitPlayerManager;

	public ExploitFixerCommand(final ExploitFixer exploitFixer, final ModuleManager moduleManager) {
		this.exploitFixer = exploitFixer;
		this.messagesModule = moduleManager.getMessagesModule();
		this.notificationsModule = moduleManager.getNotificationsModule();
		this.exploitPlayerManager = moduleManager.getExploitPlayerManager();
	}

	@Override
	public boolean onCommand(final CommandSender sender, final Command command, final String label,
			final String[] args) {
		final int length = args.length;
		final String lang;

		if (sender instanceof Player) {
			lang = VersionUtil.getLocale((Player) sender);
		} else {
			lang = "en";
		}

		if (length < 1 || args[0].equalsIgnoreCase("help")) {
			final HelpCommand helpCommand = new HelpCommand(messagesModule, lang);

			helpCommand.onCommand(sender, command, label, args);
		} else if (args[0].equalsIgnoreCase("reload")) {
			final ReloadCommand reloadCommand = new ReloadCommand(exploitFixer, messagesModule, lang);

			reloadCommand.onCommand(sender, command, label, args);
		} else if (args[0].equalsIgnoreCase("stats")) {
			final StatsCommand statsCommand = new StatsCommand(exploitPlayerManager, messagesModule, lang);

			statsCommand.onCommand(sender, command, label, args);
		} else if (args[0].equalsIgnoreCase("notifications")) {
			final NotificationsCommand notificationsCommand = new NotificationsCommand(notificationsModule,
					messagesModule, lang);

			notificationsCommand.onCommand(sender, command, label, args);
		} else {
			sender.sendMessage(messagesModule.getUnknown(lang));
		}

		return true;
	}
}
